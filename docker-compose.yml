version: "3"

services:
  profile-service:
    build: 
      context: .
      dockerfile: ./services/profile/Dockerfile
    image: profile-service
    container_name: profile-service
    restart: always
    depends_on:
      - profile-db
    ports:
      - ${PROFILE_SERVICE_PORT}:${PROFILE_SERVICE_PORT}
    networks:
      - backend
  profile-db:
    image: postgres:13-alpine
    container_name: profile-db
    restart: always
    env_file:
      - ./services/profile/configs/config.env
    environment: 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
  gateway:
    build: 
      context: .
      dockerfile: ./gateway/Dockerfile
    image: gateway
    container_name: gateway
    restart: always
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    networks:
      - backend
  api-gateway:
    image: devopsfaith/krakend:1.2.0
    container_name: api-gateway
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./gateway/krakend:/etc/krakend
    networks: 
      - backend
      - frontend

networks:
  backend:
  frontend:

volumes:
  db-data:
    