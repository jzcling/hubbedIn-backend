// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	pb "in-backend/services/project/pb"

	mock "github.com/stretchr/testify/mock"
)

// ProjectServiceServer is an autogenerated mock type for the ProjectServiceServer type
type ProjectServiceServer struct {
	mock.Mock
}

// CreateCandidateProject provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) CreateCandidateProject(_a0 context.Context, _a1 *pb.CreateCandidateProjectRequest) (*pb.CreateCandidateProjectResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.CreateCandidateProjectResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateCandidateProjectRequest) *pb.CreateCandidateProjectResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.CreateCandidateProjectResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateCandidateProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateProject provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) CreateProject(_a0 context.Context, _a1 *pb.CreateProjectRequest) (*pb.Project, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.Project
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateProjectRequest) *pb.Project); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.Project)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateRating provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) CreateRating(_a0 context.Context, _a1 *pb.CreateRatingRequest) (*pb.CreateRatingResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.CreateRatingResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateRatingRequest) *pb.CreateRatingResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.CreateRatingResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateRatingRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCandidateProject provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) DeleteCandidateProject(_a0 context.Context, _a1 *pb.DeleteCandidateProjectRequest) (*pb.DeleteCandidateProjectResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteCandidateProjectResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteCandidateProjectRequest) *pb.DeleteCandidateProjectResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteCandidateProjectResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteCandidateProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteProject provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) DeleteProject(_a0 context.Context, _a1 *pb.DeleteProjectRequest) (*pb.DeleteProjectResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteProjectResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteProjectRequest) *pb.DeleteProjectResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteProjectResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteRating provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) DeleteRating(_a0 context.Context, _a1 *pb.DeleteRatingRequest) (*pb.DeleteRatingResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteRatingResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteRatingRequest) *pb.DeleteRatingResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteRatingResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteRatingRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllProjects provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) GetAllProjects(_a0 context.Context, _a1 *pb.GetAllProjectsRequest) (*pb.GetAllProjectsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllProjectsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllProjectsRequest) *pb.GetAllProjectsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllProjectsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllProjectsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProjectByID provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) GetProjectByID(_a0 context.Context, _a1 *pb.GetProjectByIDRequest) (*pb.Project, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.Project
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetProjectByIDRequest) *pb.Project); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.Project)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetProjectByIDRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ScanProject provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) ScanProject(_a0 context.Context, _a1 *pb.ScanProjectRequest) (*pb.ScanProjectResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.ScanProjectResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.ScanProjectRequest) *pb.ScanProjectResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.ScanProjectResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.ScanProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateProject provides a mock function with given fields: _a0, _a1
func (_m *ProjectServiceServer) UpdateProject(_a0 context.Context, _a1 *pb.UpdateProjectRequest) (*pb.Project, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.Project
	if rf, ok := ret.Get(0).(func(context.Context, *pb.UpdateProjectRequest) *pb.Project); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.Project)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.UpdateProjectRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
