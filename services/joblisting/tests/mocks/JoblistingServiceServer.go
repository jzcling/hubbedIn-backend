// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	pb "in-backend/services/joblisting/pb"

	mock "github.com/stretchr/testify/mock"
)

// JoblistingServiceServer is an autogenerated mock type for the JoblistingServiceServer type
type JoblistingServiceServer struct {
	mock.Mock
}

// BulkCreateJobPost provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) BulkCreateJobPost(_a0 context.Context, _a1 *pb.BulkCreateJobPostRequest) (*pb.BulkCreateJobPostResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.BulkCreateJobPostResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.BulkCreateJobPostRequest) *pb.BulkCreateJobPostResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.BulkCreateJobPostResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.BulkCreateJobPostRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BulkCreateKeyPerson provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) BulkCreateKeyPerson(_a0 context.Context, _a1 *pb.BulkCreateKeyPersonRequest) (*pb.BulkCreateKeyPersonResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.BulkCreateKeyPersonResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.BulkCreateKeyPersonRequest) *pb.BulkCreateKeyPersonResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.BulkCreateKeyPersonResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.BulkCreateKeyPersonRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCompany provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) CreateCompany(_a0 context.Context, _a1 *pb.CreateCompanyRequest) (*pb.Company, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.Company
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateCompanyRequest) *pb.Company); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.Company)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateCompanyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateIndustry provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) CreateIndustry(_a0 context.Context, _a1 *pb.CreateIndustryRequest) (*pb.Industry, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.Industry
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateIndustryRequest) *pb.Industry); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.Industry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateIndustryRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateJobFunction provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) CreateJobFunction(_a0 context.Context, _a1 *pb.CreateJobFunctionRequest) (*pb.JobFunction, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.JobFunction
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateJobFunctionRequest) *pb.JobFunction); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.JobFunction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateJobFunctionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateJobPlatform provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) CreateJobPlatform(_a0 context.Context, _a1 *pb.CreateJobPlatformRequest) (*pb.JobPlatform, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.JobPlatform
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateJobPlatformRequest) *pb.JobPlatform); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.JobPlatform)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateJobPlatformRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateJobPost provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) CreateJobPost(_a0 context.Context, _a1 *pb.CreateJobPostRequest) (*pb.JobPost, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.JobPost
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateJobPostRequest) *pb.JobPost); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.JobPost)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateJobPostRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateKeyPerson provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) CreateKeyPerson(_a0 context.Context, _a1 *pb.CreateKeyPersonRequest) (*pb.KeyPerson, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.KeyPerson
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CreateKeyPersonRequest) *pb.KeyPerson); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.KeyPerson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CreateKeyPersonRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCompany provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) DeleteCompany(_a0 context.Context, _a1 *pb.DeleteCompanyRequest) (*pb.DeleteCompanyResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteCompanyResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteCompanyRequest) *pb.DeleteCompanyResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteCompanyResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteCompanyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteIndustry provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) DeleteIndustry(_a0 context.Context, _a1 *pb.DeleteIndustryRequest) (*pb.DeleteIndustryResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteIndustryResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteIndustryRequest) *pb.DeleteIndustryResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteIndustryResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteIndustryRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteJobFunction provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) DeleteJobFunction(_a0 context.Context, _a1 *pb.DeleteJobFunctionRequest) (*pb.DeleteJobFunctionResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteJobFunctionResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteJobFunctionRequest) *pb.DeleteJobFunctionResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteJobFunctionResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteJobFunctionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteJobPlatform provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) DeleteJobPlatform(_a0 context.Context, _a1 *pb.DeleteJobPlatformRequest) (*pb.DeleteJobPlatformResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteJobPlatformResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteJobPlatformRequest) *pb.DeleteJobPlatformResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteJobPlatformResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteJobPlatformRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteJobPost provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) DeleteJobPost(_a0 context.Context, _a1 *pb.DeleteJobPostRequest) (*pb.DeleteJobPostResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteJobPostResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteJobPostRequest) *pb.DeleteJobPostResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteJobPostResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteJobPostRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteKeyPerson provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) DeleteKeyPerson(_a0 context.Context, _a1 *pb.DeleteKeyPersonRequest) (*pb.DeleteKeyPersonResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.DeleteKeyPersonResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.DeleteKeyPersonRequest) *pb.DeleteKeyPersonResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.DeleteKeyPersonResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.DeleteKeyPersonRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllCompanies provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetAllCompanies(_a0 context.Context, _a1 *pb.GetAllCompaniesRequest) (*pb.GetAllCompaniesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllCompaniesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllCompaniesRequest) *pb.GetAllCompaniesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllCompaniesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllCompaniesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllIndustries provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetAllIndustries(_a0 context.Context, _a1 *pb.GetAllIndustriesRequest) (*pb.GetAllIndustriesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllIndustriesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllIndustriesRequest) *pb.GetAllIndustriesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllIndustriesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllIndustriesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllJobFunctions provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetAllJobFunctions(_a0 context.Context, _a1 *pb.GetAllJobFunctionsRequest) (*pb.GetAllJobFunctionsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllJobFunctionsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllJobFunctionsRequest) *pb.GetAllJobFunctionsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllJobFunctionsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllJobFunctionsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllJobPlatforms provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetAllJobPlatforms(_a0 context.Context, _a1 *pb.GetAllJobPlatformsRequest) (*pb.GetAllJobPlatformsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllJobPlatformsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllJobPlatformsRequest) *pb.GetAllJobPlatformsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllJobPlatformsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllJobPlatformsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllJobPosts provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetAllJobPosts(_a0 context.Context, _a1 *pb.GetAllJobPostsRequest) (*pb.GetAllJobPostsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllJobPostsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllJobPostsRequest) *pb.GetAllJobPostsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllJobPostsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllJobPostsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllKeyPersons provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetAllKeyPersons(_a0 context.Context, _a1 *pb.GetAllKeyPersonsRequest) (*pb.GetAllKeyPersonsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.GetAllKeyPersonsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetAllKeyPersonsRequest) *pb.GetAllKeyPersonsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.GetAllKeyPersonsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetAllKeyPersonsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetJobPostByID provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetJobPostByID(_a0 context.Context, _a1 *pb.GetJobPostByIDRequest) (*pb.JobPost, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.JobPost
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetJobPostByIDRequest) *pb.JobPost); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.JobPost)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetJobPostByIDRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetKeyPersonByID provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) GetKeyPersonByID(_a0 context.Context, _a1 *pb.GetKeyPersonByIDRequest) (*pb.KeyPerson, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.KeyPerson
	if rf, ok := ret.Get(0).(func(context.Context, *pb.GetKeyPersonByIDRequest) *pb.KeyPerson); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.KeyPerson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.GetKeyPersonByIDRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCompany provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) UpdateCompany(_a0 context.Context, _a1 *pb.UpdateCompanyRequest) (*pb.Company, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.Company
	if rf, ok := ret.Get(0).(func(context.Context, *pb.UpdateCompanyRequest) *pb.Company); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.Company)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.UpdateCompanyRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateJobPost provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) UpdateJobPost(_a0 context.Context, _a1 *pb.UpdateJobPostRequest) (*pb.JobPost, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.JobPost
	if rf, ok := ret.Get(0).(func(context.Context, *pb.UpdateJobPostRequest) *pb.JobPost); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.JobPost)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.UpdateJobPostRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateKeyPerson provides a mock function with given fields: _a0, _a1
func (_m *JoblistingServiceServer) UpdateKeyPerson(_a0 context.Context, _a1 *pb.UpdateKeyPersonRequest) (*pb.KeyPerson, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.KeyPerson
	if rf, ok := ret.Get(0).(func(context.Context, *pb.UpdateKeyPersonRequest) *pb.KeyPerson); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.KeyPerson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.UpdateKeyPersonRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
